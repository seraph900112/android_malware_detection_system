package com.example.malware_detection;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.app.SearchManager;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.SearchView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.view.MenuItemCompat;
import androidx.navigation.ui.AppBarConfiguration;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.malware_detection.SVM.SVM_Model;
import com.example.malware_detection.adapter.ApkListAdapter;
import com.example.malware_detection.apk_extractor.Extractor;
import com.example.malware_detection.apk_extractor.PermissionResolver;
import com.example.malware_detection.databinding.ActivitySystemApkDetectionBinding;

import java.util.List;

public class SystemApkDetectionActivity extends AppCompatActivity {

    private AppBarConfiguration appBarConfiguration;
    private ActivitySystemApkDetectionBinding binding;
    private ApkListAdapter apkListAdapter;
    private ProgressBar progressBar;
    private PermissionResolver permissionResolver;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        binding = ActivitySystemApkDetectionBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        setSupportActionBar(binding.systemApkToolbar);
        binding.systemApkToolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent();
                setResult(Activity.RESULT_OK, intent);
                finish();
            }
        });

        //RecyclerView
        RecyclerView listView = binding.list;
        apkListAdapter = new ApkListAdapter(this, this);
        listView.setLayoutManager(new LinearLayoutManager(this));
        listView.setAdapter(apkListAdapter);
        //progressBar
        progressBar = binding.progress;
        progressBar.setVisibility(View.VISIBLE);
        new Loader(this).execute();
        permissionResolver = new PermissionResolver(this);
    }


    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if (!permissionResolver.onRequestPermissionsResult(requestCode, permissions, grantResults)) {
            super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        }
    }

    public void hideProgressBar() {
        progressBar.setVisibility(View.GONE);
    }

    public void addItem(PackageInfo item) {
        apkListAdapter.addItem(item);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);

        SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        final SearchView searchView = (SearchView) MenuItemCompat.getActionView(menu.findItem(R.id.action_search));
        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
        searchView.setOnQueryTextFocusChangeListener(new View.OnFocusChangeListener() {
            @SuppressLint("RestrictedApi")
            @Override
            public void onFocusChange(View view, boolean queryTextFocused) {
                if (!queryTextFocused && searchView.getQuery().length() < 1) {
                    getSupportActionBar().collapseActionView();
                }
            }
        });
        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String s) {
                return false;
            }

            @Override
            public boolean onQueryTextChange(String s) {
                apkListAdapter.setSearchPattern(s);
                return true;
            }
        });

        return super.onCreateOptionsMenu(menu);
    }

    public String doExctract(final PackageInfo info) {
        if (!permissionResolver.resolve()) return "failed";

        final Extractor extractor = new Extractor();
        String dst = "failed";
        try {
            dst = extractor.extractWithoutRoot(info);
            Toast.makeText(this, String.format(this.getString(R.string.toast_extracted), dst), Toast.LENGTH_SHORT).show();
            return dst;
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        new AlertDialog.Builder(this)
                .setTitle(R.string.alert_root_title)
                .setMessage(R.string.alert_root_body)
                .setPositiveButton(R.string.alert_root_yes, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        try {
                            String dst = extractor.extractWithRoot(info);
                            Toast.makeText(SystemApkDetectionActivity.this, String.format(SystemApkDetectionActivity.this.getString(R.string.toast_extracted), dst), Toast.LENGTH_SHORT).show();
                        } catch (Exception e) {
                            e.printStackTrace();
                            Toast.makeText(SystemApkDetectionActivity.this, R.string.toast_failed, Toast.LENGTH_SHORT).show();
                        }
                    }
                }).setNegativeButton(R.string.alert_root_no, null)
                .show();
        return dst;
    }

    class Loader extends AsyncTask<Void, PackageInfo, Void> {
        ProgressDialog dialog;
        SystemApkDetectionActivity mainActivity;

        public Loader(SystemApkDetectionActivity a) {
            dialog = ProgressDialog.show(a, getString(R.string.dlg_loading_title), getString(R.string.dlg_loading_body));
            mainActivity = a;
        }

        @Override
        protected Void doInBackground(Void... params) {
            List<PackageInfo> packages = getPackageManager().getInstalledPackages(PackageManager.GET_META_DATA);
            for (PackageInfo packageInfo : packages) {
                publishProgress(packageInfo);
            }
            return null;
        }

        @Override
        protected void onProgressUpdate(PackageInfo... values) {
            super.onProgressUpdate(values);
            mainActivity.addItem(values[0]);
        }

        @Override
        protected void onPostExecute(Void aVoid) {
            super.onPostExecute(aVoid);
            dialog.dismiss();
        }
    }
}